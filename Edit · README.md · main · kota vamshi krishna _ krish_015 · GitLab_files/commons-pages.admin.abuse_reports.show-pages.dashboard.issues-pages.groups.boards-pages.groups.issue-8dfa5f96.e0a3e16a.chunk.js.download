(this.webpackJsonp=this.webpackJsonp||[]).push([[15],{"/9qn":function(e,n,i){"use strict";i.d(n,"f",(function(){return k})),i.d(n,"j",(function(){return p})),i.d(n,"h",(function(){return b})),i.d(n,"d",(function(){return h})),i.d(n,"i",(function(){return g})),i.d(n,"g",(function(){return I})),i.d(n,"k",(function(){return D})),i.d(n,"m",(function(){return F})),i.d(n,"l",(function(){return E})),i.d(n,"a",(function(){return _})),i.d(n,"c",(function(){return V})),i.d(n,"b",(function(){return L})),i.d(n,"e",(function(){return B})),i.d(n,"n",(function(){return C})),i.d(n,"o",(function(){return A}));i("B++/"),i("z6RN"),i("47t/"),i("v2fZ"),i("UezY"),i("hG7+"),i("YSE1"),i("b+iX"),i("3UXl"),i("iyoE"),i("lFMf"),i("gOHk"),i("c9hT"),i("ZzK0"),i("BzOf"),i("Tznw"),i("IYH6"),i("6yen"),i("OeRx"),i("l/dT"),i("RqS2"),i("Zy7a"),i("cjZU"),i("OAhk"),i("X42P"),i("mHhP"),i("fn0I"),i("UB/6"),i("imhG"),i("RFHG"),i("xuo1");var t=i("b9Gi"),a=i("4wgn"),r=i("FxFN"),d=i("SNRI"),o=i("3twG"),s=i("/lV4"),u=i("W4cT"),l=i("LxhL"),c=i("JtyA"),m=i("7Aw+"),f=i("AxUD"),v=i("bXWw");const k=function(){return[c.ic,c.hc,c.mc]},p=function(){return[{icon:"issue-type-issue",title:Object(s.g)("WorkItem|Issue"),value:"issue"},{icon:"issue-type-incident",title:Object(s.g)("WorkItem|Incident"),value:"incident"},{icon:"issue-type-task",title:Object(s.g)("WorkItem|Task"),value:"task"}]},b=function(e,n=(null!=e?e:l.a),i,t,a){return{firstPageSize:i?void 0:n,lastPageSize:i,afterCursor:t,beforeCursor:a}},h=function({sort:e,sortMap:n,state:i=f.i}){const t=i===f.d?v.N:v.j,a=function(e,n=v.U){return Object.keys(n).find((function(i){return n[i]===e}))}(e,n),r=function(e,n=v.U){return Object.keys(n).includes(e)}(null==e?void 0:e.toUpperCase(),n)&&e.toUpperCase();return a||r||t},g=function({hasBlockedIssuesFeature:e,hasIssuableHealthStatusFeature:n,hasIssueWeightsFeature:i,hasManualSort:t=!0}={}){const a=[{id:1,title:Object(s.a)("Priority"),sortDirection:{ascending:v.H,descending:v.I}},{id:2,title:Object(s.a)("Created date"),sortDirection:{ascending:v.i,descending:v.j}},{id:3,title:Object(s.a)("Updated date"),sortDirection:{ascending:v.M,descending:v.N}},{id:4,title:Object(s.a)("Closed date"),sortDirection:{ascending:v.f,descending:v.g}},{id:5,title:Object(s.a)("Milestone due date"),sortDirection:{ascending:v.v,descending:v.w}},{id:6,title:Object(s.a)("Due date"),sortDirection:{ascending:v.k,descending:v.l}},{id:7,title:Object(s.a)("Popularity"),sortDirection:{ascending:v.F,descending:v.G}},{id:8,title:Object(s.a)("Label priority"),sortDirection:{ascending:v.s,descending:v.t}},t&&{id:9,title:Object(s.a)("Manual"),sortDirection:{ascending:v.J,descending:v.J}},{id:10,title:Object(s.a)("Title"),sortDirection:{ascending:v.K,descending:v.L}}];return n&&a.push({id:a.length+1,title:Object(s.a)("Health"),sortDirection:{ascending:v.m,descending:v.n}}),i&&a.push({id:a.length+1,title:Object(s.a)("Weight"),sortDirection:{ascending:v.P,descending:v.Q}}),e&&a.push({id:a.length+1,title:Object(s.a)("Blocking"),sortDirection:{ascending:v.c,descending:v.d}}),a.filter((function(e){return e}))},S=Object.keys(v.S),N=function(e){return Object.values(v.S[e][v.O]).flatMap((function(e){return Object.values(e)}))},y=S.flatMap(N),I=function(e){return Array.from(new URLSearchParams(e).entries()).filter((function([e]){return y.includes(e)})).map((function([e,n]){const i=(t=e,S.find((function(e){return N(e).includes(t)})));var t;return{type:i,value:{data:n,operator:function(e,n){return Object.entries(v.S[e][v.O]).find((function([,e]){return Object.values(e).includes(n)}))[0]}(i,e)}}}))};function D(e,n){const i=[],t=n.filter((function(e){return e.multiSelect})).map((function(e){return e.type}));return e.forEach((function(e){if(!(u.p.includes(e.value.operator)&&t.includes(e.type)))return void i.push(e);const n=i.find((function(n){return n.type===e.type&&n.value.operator===e.value.operator}));n?n.value.data.includes(e.value.data)||n.value.data.push(e.value.data):i.push({...e,value:{...e.value,data:[e.value.data]}})})),i}const F=function(e){return!(e.type===u.d&&!e.value.data)},E=function(e,n){return e===u.cb&&Object(d.d)(n)&&Object(o.p)(v.y)===n},O=function(e,n){return e===u.pb&&(null==n?void 0:n.includes("&"))},w=function({type:e,value:{data:n,operator:i}}){const t=e===u.db&&i===u.u,a=e===u.rb&&i===u.u,r=i===u.q;return t||a||E(e,n)||O(e,n)||r?v.a:v.V.includes(n)?v.R:v.x},j=[u.cb,u.mb,u.ob,u.pb,u.tb,u.xb,u.yb,u.Fb],T=function(e,n){return e===u.Db||function(e,n){return j.includes(e)&&v.V.includes(n)}(e,n)};const _=function(e){const n=new Map,i=new Map,t=new Map;return e.filter(F).forEach((function(e){const d=w(e),o=v.S[e.type][v.b][d];let s;s=e.value.operator===u.t?i:e.value.operator===u.u?t:n;const l=function(e){return T(e.type,e.value.data)?e.value.data.toUpperCase():[u.fb,u.kb].includes(e.type)?"yes"===e.value.data:e.value.data}(e);if(O(e.type,e.value.data)){const[n,i]=l.split("&"),t=(c=i)?Object(r.c)(a.v,Object(r.e)(c)):null,d=n.toUpperCase();s.set(o,s.has(o)?[s.get(o),t].flat():t);const u=v.S[e.type][v.b][v.R];s.set(u,s.has(u)?[s.get(u),d].flat():d)}else s.set(o,s.has(o)?[s.get(o),l].flat():l);var c})),i.size&&n.set("not",Object.fromEntries(i)),t.size&&n.set("or",Object.fromEntries(t)),Object.fromEntries(n)},V=function(e){const n=e.filter(F).reduce((function(e,n){var i;const t=w(n),a=null===(i=v.S[n.type][v.O][n.value.operator])||void 0===i?void 0:i[t];return e.set(a,e.has(a)?[e.get(a),n.value.data].flat():n.value.data)}),new Map);return Object.fromEntries(n)},L=function(e){return e.filter((function(e){return e.type===u.d&&e.value.data})).map((function(e){return e.value.data})).join(" ")||void 0};function B(e,n){var i;return null==n||null===(i=n.widgets)||void 0===i?void 0:i.find((function(n){return n.type===e}))}function C({list:e,workItem:n,isBoard:i=!1,namespace:a=m.d.project,type:d}){const o=d+"s";return Object(t.a)(e,(function(e){const t=(i?e[a].board.lists.nodes[0][o].nodes:e[a][o].nodes).find((function(e){return d===f.n?e.iid===n.iid:Object(r.e)(e.id)===Object(r.e)(n.id)}));Object.keys(c.fc).forEach((function(e){const i=B(e,n);if(!i)return;const a=c.fc[e];a!==c.fc[c.ub]&&a!==c.fc[c.Fb]?a===c.fc[c.Hb]&&i[a]?t[a]={__persist:!0,...i[a]}:t[a]=i[a]:t[a]={...i[a],nodes:i[a].nodes.map((function(e){return{__persist:!0,...e}}))}})),t.title=n.title,t.confidential=n.confidential}))}function A({list:e,workItem:n,namespace:i=m.d.project}){const a=c.vb,r=c.fc[a];return Object(t.a)(e,(function(e){var t,d,o,s;const u=e[i].issues.nodes.find((function(e){return e.iid===n.iid})),l=B(a,n);if(!l)return;const m=null!==(t=null===(d=l[r].nodes.filter((function(e){return e.name===c.i})))||void 0===d?void 0:d.length)&&void 0!==t?t:0,f=null!==(o=null===(s=l[r].nodes.filter((function(e){return e.name===c.h})))||void 0===s?void 0:s.length)&&void 0!==o?o:0;u.upvotes=m,u.downvotes=f}))}},"4/10":function(e,n,i){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"CreateIssue"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"CreateIssueInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"createIssuable"},name:{kind:"Name",value:"createIssue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"Issue"},directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:217}};t.loc.source={body:'#import "ee_else_ce/boards/graphql/issue.fragment.graphql"\n\nmutation CreateIssue($input: CreateIssueInput!) {\n  createIssuable: createIssue(input: $input) {\n    issuable: issue {\n      ...Issue\n    }\n    errors\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};t.definitions=t.definitions.concat(i("Jg2S").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!a[n]&&(a[n]=!0,!0)})));var r={};function d(e,n){for(var i=0;i<e.definitions.length;i++){var t=e.definitions[i];if(t.name&&t.name.value==n)return t}}t.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,i){if("FragmentSpread"===n.kind)i.add(n.name.value);else if("VariableDefinition"===n.kind){var t=n.type;"NamedType"===t.kind&&i.add(t.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,i)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,i)})),n.definitions&&n.definitions.forEach((function(n){e(n,i)}))}(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.CreateIssue=function(e,n){var i={kind:e.kind,definitions:[d(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var t=r[n]||new Set,a=new Set,o=new Set;for(t.forEach((function(e){o.add(e)}));o.size>0;){var s=o;o=new Set,s.forEach((function(e){a.has(e)||(a.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return a.forEach((function(n){var t=d(e,n);t&&i.definitions.push(t)})),i}(t,"CreateIssue")},"4Alm":function(e,n,i){"use strict";i.d(n,"a",(function(){return o})),i.d(n,"b",(function(){return d}));var t=i("9k56"),a=i("jIK5"),r=i("hII5");const d=Object(r.c)({plain:Object(r.b)(a.g,!1)},"formControls"),o=Object(t.c)({props:d,computed:{custom(){return!this.plain}}})},"6a66":function(e,n,i){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"BoardLists"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"boardId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"BoardID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"listId"}},type:{kind:"NamedType",name:{kind:"Name",value:"ListID"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"filters"}},type:{kind:"NamedType",name:{kind:"Name",value:"BoardIssueInput"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"isGroup"}},type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},defaultValue:{kind:"BooleanValue",value:!1},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"isProject"}},type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},defaultValue:{kind:"BooleanValue",value:!1},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"group"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[{kind:"Directive",name:{kind:"Name",value:"include"},arguments:[{kind:"Argument",name:{kind:"Name",value:"if"},value:{kind:"Variable",name:{kind:"Name",value:"isGroup"}}}]}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"board"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"boardId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hideBacklogList"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"lists"},arguments:[{kind:"Argument",name:{kind:"Name",value:"issueFilters"},value:{kind:"Variable",name:{kind:"Name",value:"filters"}}},{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"listId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"BoardListFragment"},directives:[]}]}}]}}]}}]}},{kind:"Field",name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[{kind:"Directive",name:{kind:"Name",value:"include"},arguments:[{kind:"Argument",name:{kind:"Name",value:"if"},value:{kind:"Variable",name:{kind:"Name",value:"isProject"}}}]}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"board"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"boardId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hideBacklogList"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"lists"},arguments:[{kind:"Argument",name:{kind:"Name",value:"issueFilters"},value:{kind:"Variable",name:{kind:"Name",value:"filters"}}},{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"listId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"BoardListFragment"},directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:723}};t.loc.source={body:'#import "ee_else_ce/boards/graphql/board_list.fragment.graphql"\n\nquery BoardLists(\n  $fullPath: ID!\n  $boardId: BoardID!\n  $listId: ListID\n  $filters: BoardIssueInput\n  $isGroup: Boolean = false\n  $isProject: Boolean = false\n) {\n  group(fullPath: $fullPath) @include(if: $isGroup) {\n    id\n    board(id: $boardId) {\n      id\n      hideBacklogList\n      lists(issueFilters: $filters, id: $listId) {\n        nodes {\n          ...BoardListFragment\n        }\n      }\n    }\n  }\n  project(fullPath: $fullPath) @include(if: $isProject) {\n    id\n    board(id: $boardId) {\n      id\n      hideBacklogList\n      lists(issueFilters: $filters, id: $listId) {\n        nodes {\n          ...BoardListFragment\n        }\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};t.definitions=t.definitions.concat(i("IgWM").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!a[n]&&(a[n]=!0,!0)})));var r={};function d(e,n){for(var i=0;i<e.definitions.length;i++){var t=e.definitions[i];if(t.name&&t.name.value==n)return t}}t.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,i){if("FragmentSpread"===n.kind)i.add(n.name.value);else if("VariableDefinition"===n.kind){var t=n.type;"NamedType"===t.kind&&i.add(t.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,i)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,i)})),n.definitions&&n.definitions.forEach((function(n){e(n,i)}))}(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.BoardLists=function(e,n){var i={kind:e.kind,definitions:[d(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var t=r[n]||new Set,a=new Set,o=new Set;for(t.forEach((function(e){o.add(e)}));o.size>0;){var s=o;o=new Set,s.forEach((function(e){a.has(e)||(a.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return a.forEach((function(n){var t=d(e,n);t&&i.definitions.push(t)})),i}(t,"BoardLists")},"7Aw+":function(e,n,i){"use strict";i.d(n,"d",(function(){return A})),i.d(n,"j",(function(){return P})),i.d(n,"k",(function(){return $})),i.d(n,"r",(function(){return G})),i.d(n,"i",(function(){return q})),i.d(n,"q",(function(){return x})),i.d(n,"n",(function(){return U})),i.d(n,"u",(function(){return M})),i.d(n,"t",(function(){return z})),i.d(n,"o",(function(){return R})),i.d(n,"x",(function(){return W})),i.d(n,"w",(function(){return H})),i.d(n,"p",(function(){return Q})),i.d(n,"v",(function(){return J})),i.d(n,"s",(function(){return Y})),i.d(n,"g",(function(){return K})),i.d(n,"a",(function(){return Z})),i.d(n,"l",(function(){return X})),i.d(n,"f",(function(){return ee})),i.d(n,"m",(function(){return ne})),i.d(n,"e",(function(){return ie})),i.d(n,"c",(function(){return te})),i.d(n,"b",(function(){return re})),i.d(n,"h",(function(){return de}));var t=i("6a66"),a=i.n(t),r=i("AxUD"),d=i("/lV4"),o=i("4wgn"),s=i("7+7h"),u=i.n(s),l=i("wCwB"),c=i.n(l),m=i("d1tU"),f=i.n(m),v=i("BtBz"),k=i.n(v),p=i("ejY/"),b=i.n(p),h=i("ch/h"),g=i.n(h),S=i("pBJd"),N=i.n(S),y=i("tZv5"),I=i.n(y),D=i("E0c1"),F=i.n(D),E=i("4/10"),O=i.n(E),w=i("rC+a"),j=i.n(w),T=i("s9gT"),_=i.n(T),V=i("9+w6"),L=i.n(V),B=i("8KMy"),C=i.n(B);const A={project:"project",group:"group"},P={assignee:"assignee",milestone:"milestone",iteration:"iteration",backlog:"backlog",closed:"closed",label:"label"},$={assignee:Object(d.a)("Assignee"),milestone:Object(d.a)("Milestone"),iteration:Object(d.a)("Iteration"),label:Object(d.a)("Label"),backlog:Object(d.a)("Open")},G={new:"new",delete:"delete",edit:"edit"},q="INCIDENT",x=2e3,U={[r.t]:{query:j.a},[r.u]:{query:_.a}},M={[r.p]:{query:a.a}},z={[r.p]:{query:C.a}},R={[r.p]:{mutation:f.a}},W={[r.p]:{mutation:b.a}},H={[r.p]:{mutation:g.a}},Q={[r.p]:{mutation:k.a}},J={[r.p]:{mutation:I.a},[r.n]:{mutation:c.a}},Y=(r.p,N.a,r.n,u.a,{[r.p]:{query:L.a,moveMutation:F.a,createMutation:O.a,optimisticResponse:{assignees:{nodes:[],__typename:"UserCoreConnection"},confidential:!1,closedAt:null,dueDate:null,emailsEnabled:!0,hidden:!1,humanTimeEstimate:null,humanTotalTimeSpent:null,id:"gid://gitlab/Issue/-1",iid:"-1",labels:{nodes:[],__typename:"LabelConnection"},milestone:null,referencePath:"",relativePosition:null,severity:"UNKNOWN",timeEstimate:0,title:"",totalTimeSpent:0,type:"ISSUE",webUrl:"",weight:null,__typename:o.t}}}),K={[r.p]:["assigneeUsername","assigneeWildcardId","authorUsername","confidential","labelName","milestoneTitle","milestoneWildcardId","myReactionEmoji","releaseTag","search","types","weight"]},Z={any:"Any",none:"None"},X={any:"Any",none:"None",started:"Started",upcoming:"Upcoming"},ee={card:"card",list:"list"},ne={NONE:0,ANY:-1};const ie=10,te=Object(d.g)("Boards|Move to start of list"),ae=Object(d.g)("Boards|Move to end of list"),re=[{text:te,action:function(){}},{text:ae,action:function(){}}],de={}},"8KMy":function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"BoardListCount"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ListID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"filters"}},type:{kind:"NamedType",name:{kind:"Name",value:"BoardIssueInput"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"boardList"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}},{kind:"Argument",name:{kind:"Name",value:"issueFilters"},value:{kind:"Variable",name:{kind:"Name",value:"filters"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"issuesCount"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:140}};i.loc.source={body:"query BoardListCount($id: ListID!, $filters: BoardIssueInput) {\n  boardList(id: $id, issueFilters: $filters) {\n    id\n    issuesCount\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function a(e,n){for(var i=0;i<e.definitions.length;i++){var t=e.definitions[i];if(t.name&&t.name.value==n)return t}}i.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,i){if("FragmentSpread"===n.kind)i.add(n.name.value);else if("VariableDefinition"===n.kind){var t=n.type;"NamedType"===t.kind&&i.add(t.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,i)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,i)})),n.definitions&&n.definitions.forEach((function(n){e(n,i)}))}(e,n),t[e.name.value]=n}})),e.exports=i,e.exports.BoardListCount=function(e,n){var i={kind:e.kind,definitions:[a(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var r=t[n]||new Set,d=new Set,o=new Set;for(r.forEach((function(e){o.add(e)}));o.size>0;){var s=o;o=new Set,s.forEach((function(e){d.has(e)||(d.add(e),(t[e]||new Set).forEach((function(e){o.add(e)})))}))}return d.forEach((function(n){var t=a(e,n);t&&i.definitions.push(t)})),i}(i,"BoardListCount")},"9+w6":function(e,n,i){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"BoardListsEE"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"boardId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"BoardID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NamedType",name:{kind:"Name",value:"ListID"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"filters"}},type:{kind:"NamedType",name:{kind:"Name",value:"BoardIssueInput"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"isGroup"}},type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},defaultValue:{kind:"BooleanValue",value:!1},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"isProject"}},type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},defaultValue:{kind:"BooleanValue",value:!1},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"after"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"first"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"group"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[{kind:"Directive",name:{kind:"Name",value:"include"},arguments:[{kind:"Argument",name:{kind:"Name",value:"if"},value:{kind:"Variable",name:{kind:"Name",value:"isGroup"}}}]}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"board"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"boardId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"lists"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}},{kind:"Argument",name:{kind:"Name",value:"issueFilters"},value:{kind:"Variable",name:{kind:"Name",value:"filters"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"listType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"issues"},arguments:[{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"Variable",name:{kind:"Name",value:"first"}}},{kind:"Argument",name:{kind:"Name",value:"filters"},value:{kind:"Variable",name:{kind:"Name",value:"filters"}}},{kind:"Argument",name:{kind:"Name",value:"after"},value:{kind:"Variable",name:{kind:"Name",value:"after"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"Issue"},directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"pageInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"endCursor"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasNextPage"},arguments:[],directives:[]}]}}]}}]}}]}}]}}]}},{kind:"Field",name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[{kind:"Directive",name:{kind:"Name",value:"include"},arguments:[{kind:"Argument",name:{kind:"Name",value:"if"},value:{kind:"Variable",name:{kind:"Name",value:"isProject"}}}]}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"board"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"boardId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"lists"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}},{kind:"Argument",name:{kind:"Name",value:"issueFilters"},value:{kind:"Variable",name:{kind:"Name",value:"filters"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"listType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"issues"},arguments:[{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"Variable",name:{kind:"Name",value:"first"}}},{kind:"Argument",name:{kind:"Name",value:"filters"},value:{kind:"Variable",name:{kind:"Name",value:"filters"}}},{kind:"Argument",name:{kind:"Name",value:"after"},value:{kind:"Variable",name:{kind:"Name",value:"after"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"Issue"},directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"pageInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"endCursor"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasNextPage"},arguments:[],directives:[]}]}}]}}]}}]}}]}}]}}]}}],loc:{start:0,end:1145}};t.loc.source={body:'#import "ee_else_ce/boards/graphql/issue.fragment.graphql"\n\nquery BoardListsEE(\n  $fullPath: ID!\n  $boardId: BoardID!\n  $id: ListID\n  $filters: BoardIssueInput\n  $isGroup: Boolean = false\n  $isProject: Boolean = false\n  $after: String\n  $first: Int\n) {\n  group(fullPath: $fullPath) @include(if: $isGroup) {\n    id\n    board(id: $boardId) {\n      id\n      lists(id: $id, issueFilters: $filters) {\n        nodes {\n          id\n          listType\n          issues(first: $first, filters: $filters, after: $after) {\n            nodes {\n              ...Issue\n            }\n            pageInfo {\n              endCursor\n              hasNextPage\n            }\n          }\n        }\n      }\n    }\n  }\n  project(fullPath: $fullPath) @include(if: $isProject) {\n    id\n    board(id: $boardId) {\n      id\n      lists(id: $id, issueFilters: $filters) {\n        nodes {\n          id\n          listType\n          issues(first: $first, filters: $filters, after: $after) {\n            nodes {\n              ...Issue\n            }\n            pageInfo {\n              endCursor\n              hasNextPage\n            }\n          }\n        }\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};t.definitions=t.definitions.concat(i("Jg2S").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!a[n]&&(a[n]=!0,!0)})));var r={};function d(e,n){for(var i=0;i<e.definitions.length;i++){var t=e.definitions[i];if(t.name&&t.name.value==n)return t}}t.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,i){if("FragmentSpread"===n.kind)i.add(n.name.value);else if("VariableDefinition"===n.kind){var t=n.type;"NamedType"===t.kind&&i.add(t.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,i)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,i)})),n.definitions&&n.definitions.forEach((function(n){e(n,i)}))}(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.BoardListsEE=function(e,n){var i={kind:e.kind,definitions:[d(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var t=r[n]||new Set,a=new Set,o=new Set;for(t.forEach((function(e){o.add(e)}));o.size>0;){var s=o;o=new Set,s.forEach((function(e){a.has(e)||(a.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return a.forEach((function(n){var t=d(e,n);t&&i.definitions.push(t)})),i}(t,"BoardListsEE")},BtBz:function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"DestroyBoardList"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"listId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ListID"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"destroyBoardList"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"listId"},value:{kind:"Variable",name:{kind:"Name",value:"listId"}}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:112}};i.loc.source={body:"mutation DestroyBoardList($listId: ListID!) {\n  destroyBoardList(input: { listId: $listId }) {\n    errors\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function a(e,n){for(var i=0;i<e.definitions.length;i++){var t=e.definitions[i];if(t.name&&t.name.value==n)return t}}i.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,i){if("FragmentSpread"===n.kind)i.add(n.name.value);else if("VariableDefinition"===n.kind){var t=n.type;"NamedType"===t.kind&&i.add(t.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,i)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,i)})),n.definitions&&n.definitions.forEach((function(n){e(n,i)}))}(e,n),t[e.name.value]=n}})),e.exports=i,e.exports.DestroyBoardList=function(e,n){var i={kind:e.kind,definitions:[a(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var r=t[n]||new Set,d=new Set,o=new Set;for(r.forEach((function(e){o.add(e)}));o.size>0;){var s=o;o=new Set,s.forEach((function(e){d.has(e)||(d.add(e),(t[e]||new Set).forEach((function(e){o.add(e)})))}))}return d.forEach((function(n){var t=a(e,n);t&&i.definitions.push(t)})),i}(i,"DestroyBoardList")},E0c1:function(e,n,i){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"issueMoveList"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"projectPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"boardId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"BoardID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fromListId"}},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"toListId"}},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"moveBeforeId"}},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"moveAfterId"}},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuableMoveList"},name:{kind:"Name",value:"issueMoveList"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"projectPath"},value:{kind:"Variable",name:{kind:"Name",value:"projectPath"}}},{kind:"ObjectField",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}},{kind:"ObjectField",name:{kind:"Name",value:"boardId"},value:{kind:"Variable",name:{kind:"Name",value:"boardId"}}},{kind:"ObjectField",name:{kind:"Name",value:"fromListId"},value:{kind:"Variable",name:{kind:"Name",value:"fromListId"}}},{kind:"ObjectField",name:{kind:"Name",value:"toListId"},value:{kind:"Variable",name:{kind:"Name",value:"toListId"}}},{kind:"ObjectField",name:{kind:"Name",value:"moveBeforeId"},value:{kind:"Variable",name:{kind:"Name",value:"moveBeforeId"}}},{kind:"ObjectField",name:{kind:"Name",value:"moveAfterId"},value:{kind:"Variable",name:{kind:"Name",value:"moveAfterId"}}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"Issue"},directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:532}};t.loc.source={body:'#import "ee_else_ce/boards/graphql/issue.fragment.graphql"\n\nmutation issueMoveList(\n  $projectPath: ID!\n  $iid: String!\n  $boardId: BoardID!\n  $fromListId: ID\n  $toListId: ID\n  $moveBeforeId: ID\n  $moveAfterId: ID\n) {\n  issuableMoveList: issueMoveList(\n    input: {\n      projectPath: $projectPath\n      iid: $iid\n      boardId: $boardId\n      fromListId: $fromListId\n      toListId: $toListId\n      moveBeforeId: $moveBeforeId\n      moveAfterId: $moveAfterId\n    }\n  ) {\n    issuable: issue {\n      ...Issue\n    }\n    errors\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};t.definitions=t.definitions.concat(i("Jg2S").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!a[n]&&(a[n]=!0,!0)})));var r={};function d(e,n){for(var i=0;i<e.definitions.length;i++){var t=e.definitions[i];if(t.name&&t.name.value==n)return t}}t.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,i){if("FragmentSpread"===n.kind)i.add(n.name.value);else if("VariableDefinition"===n.kind){var t=n.type;"NamedType"===t.kind&&i.add(t.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,i)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,i)})),n.definitions&&n.definitions.forEach((function(n){e(n,i)}))}(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.issueMoveList=function(e,n){var i={kind:e.kind,definitions:[d(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var t=r[n]||new Set,a=new Set,o=new Set;for(t.forEach((function(e){o.add(e)}));o.size>0;){var s=o;o=new Set,s.forEach((function(e){a.has(e)||(a.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return a.forEach((function(n){var t=d(e,n);t&&i.definitions.push(t)})),i}(t,"issueMoveList")},IgWM:function(e,n,i){var t={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"BoardListFragment"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"BoardList"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"BoardListShared"},directives:[]}]}}],loc:{start:0,end:113}};t.loc.source={body:'#import "./board_list_shared.fragment.graphql"\n\nfragment BoardListFragment on BoardList {\n  ...BoardListShared\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};t.definitions=t.definitions.concat(i("OFHv").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!a[n]&&(a[n]=!0,!0)})));var r={};function d(e,n){for(var i=0;i<e.definitions.length;i++){var t=e.definitions[i];if(t.name&&t.name.value==n)return t}}t.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,i){if("FragmentSpread"===n.kind)i.add(n.name.value);else if("VariableDefinition"===n.kind){var t=n.type;"NamedType"===t.kind&&i.add(t.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,i)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,i)})),n.definitions&&n.definitions.forEach((function(n){e(n,i)}))}(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.BoardListFragment=function(e,n){var i={kind:e.kind,definitions:[d(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var t=r[n]||new Set,a=new Set,o=new Set;for(t.forEach((function(e){o.add(e)}));o.size>0;){var s=o;o=new Set,s.forEach((function(e){a.has(e)||(a.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return a.forEach((function(n){var t=d(e,n);t&&i.definitions.push(t)})),i}(t,"BoardListFragment")},J6Lq:function(e,n,i){"use strict";i.d(n,"m",(function(){return u})),i.d(n,"n",(function(){return l})),i.d(n,"o",(function(){return c})),i.d(n,"p",(function(){return m})),i.d(n,"r",(function(){return f})),i.d(n,"f",(function(){return v})),i.d(n,"g",(function(){return k})),i.d(n,"b",(function(){return p})),i.d(n,"d",(function(){return b})),i.d(n,"c",(function(){return h})),i.d(n,"i",(function(){return g})),i.d(n,"h",(function(){return S})),i.d(n,"e",(function(){return N})),i.d(n,"a",(function(){return I})),i.d(n,"v",(function(){return D})),i.d(n,"j",(function(){return F})),i.d(n,"q",(function(){return E})),i.d(n,"z",(function(){return O})),i.d(n,"A",(function(){return w})),i.d(n,"w",(function(){return j})),i.d(n,"s",(function(){return T})),i.d(n,"x",(function(){return _})),i.d(n,"y",(function(){return V})),i.d(n,"l",(function(){return L})),i.d(n,"t",(function(){return B})),i.d(n,"u",(function(){return C})),i.d(n,"k",(function(){return A}));i("B++/"),i("z6RN"),i("47t/"),i("3UXl"),i("iyoE"),i("E7T3");var t=i("FxFN"),a=i("3twG"),r=i("n7CP"),d=i("NmEs"),o=i("AxUD"),s=i("JtyA");const u=function(e){return e.type===s.ub},l=function(e){return e.type===s.Fb},c=function(e){return e.type===s.Hb},m=function(e){return e.type===s.Ib},f=function(e){return e.type===s.Nb},v=function(e){return null==e?void 0:e.find((function(e){return e.type===s.Db}))},k=function(e){var n;return null===(n=e.widgets)||void 0===n?void 0:n.find((function(e){return e.type===s.Gb}))},p=function(e){var n;return null===(n=e.widgets)||void 0===n?void 0:n.find((function(e){return e.type===s.vb}))},b=function(e){var n;return(null===(n=v(null==e?void 0:e.widgets))||void 0===n||null===(n=n.children)||void 0===n?void 0:n.nodes)||[]},h=function(e){return null==e?void 0:e.find((function(e){return e.type===s.Ab}))},g=function(){const{children_count:e}=Object(a.E)(window.location.search);return Number(e)||s.d},S=function(e){return function(e){var n;return(null===(n=v(null==e?void 0:e.widgets))||void 0===n||null===(n=n.ancestors)||void 0===n?void 0:n.nodes)||[]}(e).map((function(e){var n,i;return{...e,icon:(i=null===(n=e.workItemType)||void 0===n?void 0:n.iconName,i===s.M?s.Ub[s.gc].icon:i),href:e.webUrl}}))},N=function(e){var n;return null===(n=e.workItemType.widgetDefinitions)||void 0===n?void 0:n.find((function(e){return e.type===s.Db}))},y=function({autocompleteType:e,fullPath:n,iid:i,workItemTypeId:a,isGroup:r}){return`${gon.relative_url_root||""}/${r?"groups/"+n:n}/-/autocomplete_sources/${e}?type=WorkItem&${i===s.V?"work_item_type_id="+Object(t.e)(a):"type_id="+i}`},I=function({fullPath:e,iid:n,workItemTypeId:i,isGroup:t=!1}){return{labels:y({autocompleteType:"labels",fullPath:e,iid:n,isGroup:t,workItemTypeId:i}),members:y({autocompleteType:"members",fullPath:e,iid:n,isGroup:t,workItemTypeId:i}),commands:y({autocompleteType:"commands",fullPath:e,iid:n,isGroup:t,workItemTypeId:i}),issues:y({autocompleteType:"issues",fullPath:e,iid:n,isGroup:t,workItemTypeId:i}),mergeRequests:y({autocompleteType:"merge_requests",fullPath:e,iid:n,isGroup:t,workItemTypeId:i}),epics:y({autocompleteType:"epics",fullPath:e,iid:n,workItemTypeId:i,isGroup:t})}},D=function({fullPath:e,iid:n,isGroup:i=!1}){return`${gon.relative_url_root||""}/${i?"groups/"+e:e}/-/preview_markdown?target_type=WorkItem&target_id=${n}`},F=function(e,n){return new RegExp(e+"#","g").test(n)?n.replace(new RegExp(""+e,"g"),""):n},E=function(e){return/^([\w-]+(?:\/[\w-]+)*)?[#&](\d+)$/.test(e)},O=function(e,n){return e.name.toLowerCase().localeCompare(n.name.toLowerCase())},w=function(e,n){return`${gon.relative_url_root||""}/groups/${e}/-/roadmap?epic_iid=${n}&layout=MONTHS&timeframe_range_type=CURRENT_YEAR`},j=function(e,n){if(!n)return;return`${e}-${n.split(" ").join("-").toLowerCase()}-id`},T=function(e){return[s.gc,s.hc,s.ic,s.mc,s.nc,s.kc,s.jc,s.lc].indexOf(e)>=0},_=function(e){if(!e)return;const n=e.split(" ").join("-").toLowerCase();return`${s.U}-${n}`},V=function(e,n){r.a.canUseLocalStorage()&&localStorage.setItem(e,n)},L=function(e,n=!0){var i;return r.a.canUseLocalStorage()?Object(d.G)(null!==(i=localStorage.getItem(e))&&void 0!==i?i:n):null},B=function(e,n,i=o.p){if(null!=e&&e.fullPath)return e.fullPath;const t=i===o.n?"&":"#";return null!=e&&e.referencePath?e.referencePath.split(t)[0]:n},C=function(e,n,i=o.p){return btoa(JSON.stringify({iid:e.iid,full_path:B(e,n,i),id:Object(t.e)(e.id)}))},A=function(e,n){return n&&e?`new-${e}-${n.toLowerCase()}-draft`:""}},Jg2S:function(e,n,i){var t={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"Issue"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Issue"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"FragmentSpread",name:{kind:"Name",value:"IssueNode"},directives:[]}]}}],loc:{start:0,end:109}};t.loc.source={body:'#import "~/graphql_shared/fragments/issue.fragment.graphql"\n\nfragment Issue on Issue {\n  id\n  ...IssueNode\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};t.definitions=t.definitions.concat(i("lHoO").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!a[n]&&(a[n]=!0,!0)})));var r={};function d(e,n){for(var i=0;i<e.definitions.length;i++){var t=e.definitions[i];if(t.name&&t.name.value==n)return t}}t.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,i){if("FragmentSpread"===n.kind)i.add(n.name.value);else if("VariableDefinition"===n.kind){var t=n.type;"NamedType"===t.kind&&i.add(t.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,i)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,i)})),n.definitions&&n.definitions.forEach((function(n){e(n,i)}))}(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.Issue=function(e,n){var i={kind:e.kind,definitions:[d(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var t=r[n]||new Set,a=new Set,o=new Set;for(t.forEach((function(e){o.add(e)}));o.size>0;){var s=o;o=new Set,s.forEach((function(e){a.has(e)||(a.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return a.forEach((function(n){var t=d(e,n);t&&i.definitions.push(t)})),i}(t,"Issue")},LxhL:function(e,n,i){"use strict";i.d(n,"d",(function(){return r})),i.d(n,"e",(function(){return d})),i.d(n,"a",(function(){return o})),i.d(n,"b",(function(){return s})),i.d(n,"c",(function(){return u}));var t=i("AxUD"),a=i("/lV4");const r=[{id:"state-opened",name:t.i,title:Object(a.a)("Open"),titleTooltip:Object(a.a)("Filter by issues that are currently opened.")},{id:"state-closed",name:t.d,title:Object(a.a)("Closed"),titleTooltip:Object(a.a)("Filter by issues that are currently closed.")},{id:"state-all",name:t.c,title:Object(a.a)("All"),titleTooltip:Object(a.a)("Show all issues.")}],d=[{id:"state-opened",name:t.i,title:Object(a.a)("Open"),titleTooltip:Object(a.a)("Filter by merge requests that are currently opened.")},{id:"state-merged",name:t.h,title:Object(a.a)("Merged"),titleTooltip:Object(a.a)("Filter by merge requests that are merged.")},{id:"state-closed",name:t.d,title:Object(a.a)("Closed"),titleTooltip:Object(a.a)("Filter by merge requests that are currently closed.")},{id:"state-all",name:t.c,title:Object(a.a)("All"),titleTooltip:Object(a.a)("Show all merge requests.")}],o=(Object(a.a)("Created date"),Object(a.a)("Updated date"),20),s=5,u="issuable_list_page_size"},OFHv:function(e,n){var i={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"BoardListShared"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"BoardList"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"title"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"position"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"listType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"collapsed"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"label"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"title"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"color"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"textColor"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"descriptionHtml"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:180}};i.loc.source={body:"fragment BoardListShared on BoardList {\n  id\n  title\n  position\n  listType\n  collapsed\n  label {\n    id\n    title\n    color\n    textColor\n    description\n    descriptionHtml\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function a(e,n){for(var i=0;i<e.definitions.length;i++){var t=e.definitions[i];if(t.name&&t.name.value==n)return t}}i.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,i){if("FragmentSpread"===n.kind)i.add(n.name.value);else if("VariableDefinition"===n.kind){var t=n.type;"NamedType"===t.kind&&i.add(t.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,i)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,i)})),n.definitions&&n.definitions.forEach((function(n){e(n,i)}))}(e,n),t[e.name.value]=n}})),e.exports=i,e.exports.BoardListShared=function(e,n){var i={kind:e.kind,definitions:[a(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var r=t[n]||new Set,d=new Set,o=new Set;for(r.forEach((function(e){o.add(e)}));o.size>0;){var s=o;o=new Set,s.forEach((function(e){d.has(e)||(d.add(e),(t[e]||new Set).forEach((function(e){o.add(e)})))}))}return d.forEach((function(n){var t=a(e,n);t&&i.definitions.push(t)})),i}(i,"BoardListShared")},W4cT:function(e,n,i){"use strict";i.d(n,"a",(function(){return a})),i.d(n,"k",(function(){return r})),i.d(n,"h",(function(){return d})),i.d(n,"f",(function(){return o})),i.d(n,"g",(function(){return s})),i.d(n,"j",(function(){return u})),i.d(n,"i",(function(){return l})),i.d(n,"e",(function(){return c})),i.d(n,"s",(function(){return m})),i.d(n,"t",(function(){return v})),i.d(n,"u",(function(){return p})),i.d(n,"q",(function(){return h})),i.d(n,"r",(function(){return S})),i.d(n,"m",(function(){return y})),i.d(n,"n",(function(){return O})),i.d(n,"o",(function(){return w})),i.d(n,"l",(function(){return j})),i.d(n,"p",(function(){return T})),i.d(n,"v",(function(){return C})),i.d(n,"b",(function(){return A})),i.d(n,"w",(function(){return P})),i.d(n,"d",(function(){return $})),i.d(n,"x",(function(){return G})),i.d(n,"y",(function(){return q})),i.d(n,"N",(function(){return x})),i.d(n,"z",(function(){return U})),i.d(n,"A",(function(){return M})),i.d(n,"B",(function(){return z})),i.d(n,"D",(function(){return R})),i.d(n,"E",(function(){return W})),i.d(n,"I",(function(){return H})),i.d(n,"K",(function(){return Q})),i.d(n,"M",(function(){return J})),i.d(n,"R",(function(){return Y})),i.d(n,"O",(function(){return K})),i.d(n,"P",(function(){return Z})),i.d(n,"Q",(function(){return X})),i.d(n,"S",(function(){return ee})),i.d(n,"T",(function(){return ne})),i.d(n,"V",(function(){return ie})),i.d(n,"W",(function(){return te})),i.d(n,"L",(function(){return ae})),i.d(n,"X",(function(){return re})),i.d(n,"Y",(function(){return de})),i.d(n,"Z",(function(){return oe})),i.d(n,"U",(function(){return se})),i.d(n,"F",(function(){return ue})),i.d(n,"C",(function(){return le})),i.d(n,"H",(function(){return ce})),i.d(n,"G",(function(){return me})),i.d(n,"J",(function(){return fe})),i.d(n,"bb",(function(){return ve})),i.d(n,"ab",(function(){return ke})),i.d(n,"sb",(function(){return pe})),i.d(n,"cb",(function(){return be})),i.d(n,"db",(function(){return he})),i.d(n,"fb",(function(){return ge})),i.d(n,"gb",(function(){return Se})),i.d(n,"kb",(function(){return Ne})),i.d(n,"nb",(function(){return ye})),i.d(n,"mb",(function(){return Ie})),i.d(n,"wb",(function(){return De})),i.d(n,"ob",(function(){return Fe})),i.d(n,"pb",(function(){return Ee})),i.d(n,"rb",(function(){return Oe})),i.d(n,"tb",(function(){return we})),i.d(n,"ub",(function(){return je})),i.d(n,"vb",(function(){return Te})),i.d(n,"xb",(function(){return _e})),i.d(n,"yb",(function(){return Ve})),i.d(n,"Ab",(function(){return Le})),i.d(n,"Bb",(function(){return Be})),i.d(n,"qb",(function(){return Ce})),i.d(n,"Cb",(function(){return Ae})),i.d(n,"Db",(function(){return Pe})),i.d(n,"Eb",(function(){return $e})),i.d(n,"Fb",(function(){return Ge})),i.d(n,"zb",(function(){return qe})),i.d(n,"hb",(function(){return xe})),i.d(n,"eb",(function(){return Ue})),i.d(n,"jb",(function(){return Me})),i.d(n,"ib",(function(){return ze})),i.d(n,"lb",(function(){return Re})),i.d(n,"c",(function(){return We}));var t=i("/lV4");const a=500,r=3,d="None",o="Any",s="Current",u="Upcoming",l="Started",c=[d,o],m="=",f=Object(t.a)("is"),v="!=",k=Object(t.a)("is not one of"),p="||",b=Object(t.a)("is one of"),h="≥",g=Object(t.a)("on or after"),S="<",N=Object(t.a)("before"),y=[{value:m,description:f}],I=[{value:v,description:k}],D=[{value:p,description:b}],F=[{value:h,description:g}],E=[{value:S,description:N}],O=[...y,...I],w=[...y,...I,...D],j=[...F,...E],T=[p,v],_={value:d,text:Object(t.a)("None"),title:Object(t.a)("None")},V={value:o,text:Object(t.a)("Any"),title:Object(t.a)("Any")},L=(Object(t.a)("Current"),{value:l,text:Object(t.a)("Started"),title:Object(t.a)("Started")}),B={value:u,text:Object(t.a)("Upcoming"),title:Object(t.a)("Upcoming")},C=[_,V],A=C.concat([B,L]),P={descending:"descending",ascending:"ascending"},$="filtered-search-term",G={type:$,value:{data:""}},q=Object(t.a)("Approved-By"),x=Object(t.a)("Merged-By"),U=Object(t.a)("Approver"),M=Object(t.g)("SearchToken|Assignee"),z=Object(t.a)("Author"),R=Object(t.a)("Confidential"),W=Object(t.g)("Crm|Contact"),H=Object(t.g)("MergeRequests|Draft"),Q=Object(t.a)("Group"),J=(Object(t.a)("Group invite"),Object(t.a)("Label")),Y=Object(t.a)("Project"),K=Object(t.a)("Milestone"),Z=Object(t.a)("My-Reaction"),X=Object(t.g)("Crm|Organization"),ee=Object(t.a)("Release"),ne=Object(t.g)("SearchToken|Reviewer"),ie=Object(t.a)("Source Branch"),te=Object(t.a)("Status"),ae=Object(t.g)("Job|Runner type"),re=Object(t.a)("Target Branch"),de=Object(t.a)("Type"),oe=Object(t.a)("Version"),se=Object(t.a)("Search Within"),ue=Object(t.a)("Created date"),le=Object(t.a)("Closed date"),ce=Object(t.a)("Deployed-before"),me=Object(t.a)("Deployed-after"),fe=(Object(t.a)("Assigned seat"),Object(t.a)("Environment")),ve="approver",ke="approved-by",pe="merge-user",be="assignee",he="author",ge="confidential",Se="contact",Ne="draft",ye="group",Ie="epic",De="project",Fe="health",Ee="iteration",Oe="label",we="milestone",je="my-reaction",Te="organization",_e="release",Ve="reviewer",Le="source-branch",Be="status",Ce="jobs-runner-type",Ae="target-branch",Pe="type",$e="version",Ge="weight",qe="in",xe="created",Ue="closed",Me="deployed-before",ze="deployed-after",Re="environment",We={USER:"User",AUTHOR:"Author",GROUP:"Group",PROJECT:"Project"}},ZtTk:function(e,n){var i={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"BoardScopeFragment"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Board"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hideBacklogList"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hideClosedList"},arguments:[],directives:[]}]}}],loc:{start:0,end:88}};i.loc.source={body:"fragment BoardScopeFragment on Board {\n  id\n  name\n  hideBacklogList\n  hideClosedList\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function a(e,n){for(var i=0;i<e.definitions.length;i++){var t=e.definitions[i];if(t.name&&t.name.value==n)return t}}i.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,i){if("FragmentSpread"===n.kind)i.add(n.name.value);else if("VariableDefinition"===n.kind){var t=n.type;"NamedType"===t.kind&&i.add(t.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,i)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,i)})),n.definitions&&n.definitions.forEach((function(n){e(n,i)}))}(e,n),t[e.name.value]=n}})),e.exports=i,e.exports.BoardScopeFragment=function(e,n){var i={kind:e.kind,definitions:[a(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var r=t[n]||new Set,d=new Set,o=new Set;for(r.forEach((function(e){o.add(e)}));o.size>0;){var s=o;o=new Set,s.forEach((function(e){d.has(e)||(d.add(e),(t[e]||new Set).forEach((function(e){o.add(e)})))}))}return d.forEach((function(n){var t=a(e,n);t&&i.definitions.push(t)})),i}(i,"BoardScopeFragment")},bXWw:function(e,n,i){"use strict";i.d(n,"r",(function(){return r})),i.d(n,"u",(function(){return d})),i.d(n,"y",(function(){return o})),i.d(n,"z",(function(){return s})),i.d(n,"A",(function(){return u})),i.d(n,"B",(function(){return l})),i.d(n,"C",(function(){return c})),i.d(n,"D",(function(){return m})),i.d(n,"E",(function(){return f})),i.d(n,"c",(function(){return v})),i.d(n,"d",(function(){return k})),i.d(n,"f",(function(){return p})),i.d(n,"g",(function(){return b})),i.d(n,"i",(function(){return h})),i.d(n,"j",(function(){return g})),i.d(n,"k",(function(){return S})),i.d(n,"l",(function(){return N})),i.d(n,"m",(function(){return y})),i.d(n,"n",(function(){return I})),i.d(n,"s",(function(){return D})),i.d(n,"t",(function(){return F})),i.d(n,"v",(function(){return E})),i.d(n,"w",(function(){return O})),i.d(n,"F",(function(){return w})),i.d(n,"G",(function(){return j})),i.d(n,"H",(function(){return T})),i.d(n,"I",(function(){return _})),i.d(n,"J",(function(){return V})),i.d(n,"K",(function(){return L})),i.d(n,"L",(function(){return B})),i.d(n,"M",(function(){return C})),i.d(n,"N",(function(){return A})),i.d(n,"P",(function(){return P})),i.d(n,"Q",(function(){return $})),i.d(n,"b",(function(){return G})),i.d(n,"O",(function(){return q})),i.d(n,"x",(function(){return x})),i.d(n,"R",(function(){return U})),i.d(n,"a",(function(){return M})),i.d(n,"q",(function(){return z})),i.d(n,"p",(function(){return R})),i.d(n,"o",(function(){return W})),i.d(n,"e",(function(){return H})),i.d(n,"h",(function(){return Q})),i.d(n,"T",(function(){return J})),i.d(n,"U",(function(){return Y})),i.d(n,"V",(function(){return K})),i.d(n,"S",(function(){return Z}));var t=i("/lV4"),a=i("W4cT");const r=/^#\d+$/,d=10,o="assignee_id",s="first_page_size",u="last_page_size",l="page_after",c="page_before",m="sort",f="state",v="BLOCKING_ISSUES_ASC",k="BLOCKING_ISSUES_DESC",p="CLOSED_AT_ASC",b="CLOSED_AT_DESC",h="CREATED_ASC",g="CREATED_DESC",S="DUE_DATE_ASC",N="DUE_DATE_DESC",y="HEALTH_STATUS_ASC",I="HEALTH_STATUS_DESC",D="LABEL_PRIORITY_ASC",F="LABEL_PRIORITY_DESC",E="MILESTONE_DUE_ASC",O="MILESTONE_DUE_DESC",w="POPULARITY_ASC",j="POPULARITY_DESC",T="PRIORITY_ASC",_="PRIORITY_DESC",V="RELATIVE_POSITION_ASC",L="TITLE_ASC",B="TITLE_DESC",C="UPDATED_ASC",A="UPDATED_DESC",P="WEIGHT_ASC",$="WEIGHT_DESC",G="apiParam",q="urlParam",x="normalFilter",U="wildcardFilter",M="alternativeFilter",z="issuesViewType",R="List",W="Grid",H=Object(t.a)("Closed"),Q=Object(t.a)("Closed (moved)"),J={actionsLabel:Object(t.a)("Actions"),closed:H,closedMoved:Q,confidentialNo:Object(t.a)("No"),confidentialYes:Object(t.a)("Yes"),downvotes:Object(t.a)("Downvotes"),errorFetchingCounts:Object(t.a)("An error occurred while getting issue counts"),errorFetchingIssues:Object(t.a)("An error occurred while loading issues"),issueRepositioningMessage:Object(t.a)("Issues are being rebalanced at the moment, so manual reordering is disabled."),upvotes:Object(t.a)("Upvotes"),titles:Object(t.a)("Titles"),descriptions:Object(t.a)("Descriptions")},Y={[T]:"priority",[_]:"priority_desc",[h]:"created_asc",[g]:"created_date",[C]:"updated_asc",[A]:"updated_desc",[p]:"closed_at",[b]:"closed_at_desc",[E]:"milestone",[O]:"milestone_due_desc",[S]:"due_date",[N]:"due_date_desc",[w]:"popularity_asc",[j]:"popularity",[D]:"label_priority",[F]:"label_priority_desc",[V]:"relative_position",[L]:"title_asc",[B]:"title_desc",[y]:"health_status_asc",[I]:"health_status_desc",[P]:"weight",[$]:"weight_desc",[v]:"blocking_issues_asc",[k]:"blocking_issues_desc"},K=[a.h,a.f,a.g,a.j,a.i],Z={[a.d]:{[G]:{[x]:"search"},[q]:{[void 0]:{[x]:"search"}}},[a.ab]:{[G]:{[x]:"approvedBy"},[q]:{[a.s]:{[x]:"approved_by_usernames[]"},[a.t]:{[x]:"not[approved_by_usernames][]"}}},[a.bb]:{[G]:{[x]:"approver"},[q]:{[a.s]:{[x]:"approver[]"}}},[a.db]:{[G]:{[x]:"authorUsername",[M]:"authorUsernames"},[q]:{[a.s]:{[x]:"author_username"},[a.t]:{[x]:"not[author_username][]"},[a.u]:{[M]:"or[author_username][]"}}},[a.zb]:{[G]:{[x]:"in"},[q]:{[a.s]:{[x]:"in"}}},[a.cb]:{[G]:{[x]:"assigneeUsernames",[U]:"assigneeWildcardId",[M]:"assigneeId"},[q]:{[a.s]:{[x]:"assignee_username[]",[U]:"assignee_id",[M]:"assignee_username"},[a.t]:{[x]:"not[assignee_username][]",[M]:"not[assignee_username]"},[a.u]:{[x]:"or[assignee_username][]"}}},[a.nb]:{[G]:{[x]:"fullPath"},[q]:{[a.s]:{[x]:"group_path"}}},[a.yb]:{[G]:{[x]:"reviewerUsername",[U]:"reviewerWildcardId",[M]:"reviewerId"},[q]:{[a.s]:{[x]:"reviewer_username",[U]:"reviewer_id",[M]:"reviewer_username"},[a.t]:{[x]:"not[reviewer_username]"}}},[a.sb]:{[G]:{[x]:"mergeUser"},[q]:{[a.s]:{[x]:"merge_user"}}},[a.tb]:{[G]:{[x]:"milestoneTitle",[U]:"milestoneWildcardId"},[q]:{[a.s]:{[x]:"milestone_title",[U]:"milestone_title"},[a.t]:{[x]:"not[milestone_title]",[U]:"not[milestone_title]"}}},[a.rb]:{[G]:{[x]:"labelName",[U]:"labelName",[M]:"labelNames"},[q]:{[a.s]:{[x]:"label_name[]",[U]:"label_name[]",[M]:"label_name"},[a.t]:{[x]:"not[label_name][]"},[a.u]:{[M]:"or[label_name][]"}}},[a.Ab]:{[G]:{[x]:"sourceBranches"},[q]:{[a.s]:{[x]:"source_branches[]"}}},[a.Cb]:{[G]:{[x]:"targetBranches"},[q]:{[a.s]:{[x]:"target_branches[]"}}},[a.Db]:{[G]:{[x]:"types"},[q]:{[a.s]:{[x]:"type[]"},[a.t]:{[x]:"not[type][]"}}},[a.xb]:{[G]:{[x]:"releaseTag",[U]:"releaseTagWildcardId"},[q]:{[a.s]:{[x]:"release_tag",[U]:"release_tag"},[a.t]:{[x]:"not[release_tag]"}}},[a.ub]:{[G]:{[x]:"myReactionEmoji",[U]:"myReactionEmoji"},[q]:{[a.s]:{[x]:"my_reaction_emoji",[U]:"my_reaction_emoji"},[a.t]:{[x]:"not[my_reaction_emoji]"}}},[a.fb]:{[G]:{[x]:"confidential"},[q]:{[a.s]:{[x]:"confidential"}}},[a.kb]:{[G]:{[x]:"draft"},[q]:{[a.s]:{[x]:"draft"}}},[a.pb]:{[G]:{[x]:"iterationId",[U]:"iterationWildcardId",[M]:"iterationCadenceId"},[q]:{[a.s]:{[x]:"iteration_id",[U]:"iteration_id",[M]:"iteration_cadence_id"},[a.t]:{[x]:"not[iteration_id]",[U]:"not[iteration_id]"}}},[a.mb]:{[G]:{[x]:"epicId",[U]:"epicWildcardId"},[q]:{[a.s]:{[x]:"epic_id",[U]:"epic_id"},[a.t]:{[x]:"not[epic_id]"}}},[a.Fb]:{[G]:{[x]:"weight",[U]:"weightWildcardId"},[q]:{[a.s]:{[x]:"weight",[U]:"weight"},[a.t]:{[x]:"not[weight]"}}},[a.ob]:{[G]:{[x]:"healthStatusFilter",[U]:"healthStatusFilter"},[q]:{[a.s]:{[x]:"health_status",[U]:"health_status"},[a.t]:{[x]:"not[health_status]"}}},[a.gb]:{[G]:{[x]:"crmContactId"},[q]:{[a.s]:{[x]:"crm_contact_id"}}},[a.vb]:{[G]:{[x]:"crmOrganizationId"},[q]:{[a.s]:{[x]:"crm_organization_id"}}},[a.hb]:{[G]:{[x]:"createdBefore",[M]:"createdAfter"},[q]:{[a.q]:{[M]:"created_after"},[a.r]:{[x]:"created_before"}}},[a.eb]:{[G]:{[x]:"closedBefore",[M]:"closedAfter"},[q]:{[a.q]:{[M]:"closed_after"},[a.r]:{[x]:"closed_before"}}},[a.lb]:{[G]:{[x]:"environmentName"},[q]:{[a.s]:{[x]:"environment"}}},[a.jb]:{[G]:{[x]:"deployedBefore"},[q]:{[a.s]:{[x]:"deployed_before"}}},[a.ib]:{[G]:{[x]:"deployedAfter"},[q]:{[a.s]:{[x]:"deployed_after"}}}}},"ch/h":function(e,n,i){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"toggleListCollapsed"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"list"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"BoardList"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"collapsed"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"clientToggleListCollapsed"},arguments:[{kind:"Argument",name:{kind:"Name",value:"list"},value:{kind:"Variable",name:{kind:"Name",value:"list"}}},{kind:"Argument",name:{kind:"Name",value:"collapsed"},value:{kind:"Variable",name:{kind:"Name",value:"collapsed"}}}],directives:[{kind:"Directive",name:{kind:"Name",value:"client"},arguments:[]}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"BoardListFragment"},directives:[]}]}}]}}]}}],loc:{start:0,end:261}};t.loc.source={body:'#import "ee_else_ce/boards/graphql/board_list.fragment.graphql"\n\nmutation toggleListCollapsed($list: BoardList!, $collapsed: Boolean!) {\n  clientToggleListCollapsed(list: $list, collapsed: $collapsed) @client {\n    list {\n      ...BoardListFragment\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};t.definitions=t.definitions.concat(i("IgWM").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!a[n]&&(a[n]=!0,!0)})));var r={};function d(e,n){for(var i=0;i<e.definitions.length;i++){var t=e.definitions[i];if(t.name&&t.name.value==n)return t}}t.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,i){if("FragmentSpread"===n.kind)i.add(n.name.value);else if("VariableDefinition"===n.kind){var t=n.type;"NamedType"===t.kind&&i.add(t.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,i)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,i)})),n.definitions&&n.definitions.forEach((function(n){e(n,i)}))}(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.toggleListCollapsed=function(e,n){var i={kind:e.kind,definitions:[d(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var t=r[n]||new Set,a=new Set,o=new Set;for(t.forEach((function(e){o.add(e)}));o.size>0;){var s=o;o=new Set,s.forEach((function(e){a.has(e)||(a.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return a.forEach((function(n){var t=d(e,n);t&&i.definitions.push(t)})),i}(t,"toggleListCollapsed")},d1tU:function(e,n,i){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"createBoardList"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"boardId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"BoardID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"backlog"}},type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"labelId"}},type:{kind:"NamedType",name:{kind:"Name",value:"LabelID"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"position"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"boardListCreate"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"boardId"},value:{kind:"Variable",name:{kind:"Name",value:"boardId"}}},{kind:"ObjectField",name:{kind:"Name",value:"backlog"},value:{kind:"Variable",name:{kind:"Name",value:"backlog"}}},{kind:"ObjectField",name:{kind:"Name",value:"labelId"},value:{kind:"Variable",name:{kind:"Name",value:"labelId"}}},{kind:"ObjectField",name:{kind:"Name",value:"position"},value:{kind:"Variable",name:{kind:"Name",value:"position"}}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"BoardListFragment"},directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:320}};t.loc.source={body:'#import "./board_list.fragment.graphql"\n\nmutation createBoardList($boardId: BoardID!, $backlog: Boolean, $labelId: LabelID, $position: Int) {\n  boardListCreate(\n    input: { boardId: $boardId, backlog: $backlog, labelId: $labelId, position: $position }\n  ) {\n    list {\n      ...BoardListFragment\n    }\n    errors\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};t.definitions=t.definitions.concat(i("IgWM").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!a[n]&&(a[n]=!0,!0)})));var r={};function d(e,n){for(var i=0;i<e.definitions.length;i++){var t=e.definitions[i];if(t.name&&t.name.value==n)return t}}t.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,i){if("FragmentSpread"===n.kind)i.add(n.name.value);else if("VariableDefinition"===n.kind){var t=n.type;"NamedType"===t.kind&&i.add(t.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,i)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,i)})),n.definitions&&n.definitions.forEach((function(n){e(n,i)}))}(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.createBoardList=function(e,n){var i={kind:e.kind,definitions:[d(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var t=r[n]||new Set,a=new Set,o=new Set;for(t.forEach((function(e){o.add(e)}));o.size>0;){var s=o;o=new Set,s.forEach((function(e){a.has(e)||(a.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return a.forEach((function(n){var t=d(e,n);t&&i.definitions.push(t)})),i}(t,"createBoardList")},"ejY/":function(e,n,i){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"UpdateBoardList"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"listId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ListID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"position"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"collapsed"}},type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"updateBoardList"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"listId"},value:{kind:"Variable",name:{kind:"Name",value:"listId"}}},{kind:"ObjectField",name:{kind:"Name",value:"position"},value:{kind:"Variable",name:{kind:"Name",value:"position"}}},{kind:"ObjectField",name:{kind:"Name",value:"collapsed"},value:{kind:"Variable",name:{kind:"Name",value:"collapsed"}}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"BoardListFragment"},directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:276}};t.loc.source={body:'#import "./board_list.fragment.graphql"\n\nmutation UpdateBoardList($listId: ListID!, $position: Int, $collapsed: Boolean) {\n  updateBoardList(input: { listId: $listId, position: $position, collapsed: $collapsed }) {\n    list {\n      ...BoardListFragment\n    }\n    errors\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};t.definitions=t.definitions.concat(i("IgWM").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!a[n]&&(a[n]=!0,!0)})));var r={};function d(e,n){for(var i=0;i<e.definitions.length;i++){var t=e.definitions[i];if(t.name&&t.name.value==n)return t}}t.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,i){if("FragmentSpread"===n.kind)i.add(n.name.value);else if("VariableDefinition"===n.kind){var t=n.type;"NamedType"===t.kind&&i.add(t.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,i)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,i)})),n.definitions&&n.definitions.forEach((function(n){e(n,i)}))}(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.UpdateBoardList=function(e,n){var i={kind:e.kind,definitions:[d(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var t=r[n]||new Set,a=new Set,o=new Set;for(t.forEach((function(e){o.add(e)}));o.size>0;){var s=o;o=new Set,s.forEach((function(e){a.has(e)||(a.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return a.forEach((function(n){var t=d(e,n);t&&i.definitions.push(t)})),i}(t,"UpdateBoardList")},lHoO:function(e,n,i){var t={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"IssueNode"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Issue"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"iid"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"title"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"referencePath"},name:{kind:"Name",value:"reference"},arguments:[{kind:"Argument",name:{kind:"Name",value:"full"},value:{kind:"BooleanValue",value:!0}}],directives:[]},{kind:"Field",name:{kind:"Name",value:"closedAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"dueDate"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"timeEstimate"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"totalTimeSpent"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"humanTimeEstimate"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"humanTotalTimeSpent"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"emailsDisabled"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"confidential"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hidden"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"webUrl"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"relativePosition"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"severity"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"milestone"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"MilestoneFragment"},directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"assignees"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"User"},directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"labels"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"title"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"color"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:573}};t.loc.source={body:'#import "~/graphql_shared/fragments/milestone.fragment.graphql"\n#import "~/graphql_shared/fragments/user.fragment.graphql"\n\nfragment IssueNode on Issue {\n  id\n  iid\n  title\n  referencePath: reference(full: true)\n  closedAt\n  dueDate\n  timeEstimate\n  totalTimeSpent\n  humanTimeEstimate\n  humanTotalTimeSpent\n  emailsDisabled\n  confidential\n  hidden\n  webUrl\n  relativePosition\n  type\n  severity\n  milestone {\n    ...MilestoneFragment\n  }\n  assignees {\n    nodes {\n      ...User\n    }\n  }\n  labels {\n    nodes {\n      id\n      title\n      color\n      description\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function r(e){return e.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!a[n]&&(a[n]=!0,!0)}))}t.definitions=t.definitions.concat(r(i("tylY").definitions)),t.definitions=t.definitions.concat(r(i("aBoS").definitions));var d={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var t=e.definitions[i];if(t.name&&t.name.value==n)return t}}t.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,i){if("FragmentSpread"===n.kind)i.add(n.name.value);else if("VariableDefinition"===n.kind){var t=n.type;"NamedType"===t.kind&&i.add(t.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,i)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,i)})),n.definitions&&n.definitions.forEach((function(n){e(n,i)}))}(e,n),d[e.name.value]=n}})),e.exports=t,e.exports.IssueNode=function(e,n){var i={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var t=d[n]||new Set,a=new Set,r=new Set;for(t.forEach((function(e){r.add(e)}));r.size>0;){var s=r;r=new Set,s.forEach((function(e){a.has(e)||(a.add(e),(d[e]||new Set).forEach((function(e){r.add(e)})))}))}return a.forEach((function(n){var t=o(e,n);t&&i.definitions.push(t)})),i}(t,"IssueNode")},pBJd:function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"issueSetSubscription"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"IssueSetSubscriptionInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"updateIssuableSubscription"},name:{kind:"Name",value:"issueSetSubscription"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"issue"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"subscribed"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:197}};i.loc.source={body:"mutation issueSetSubscription($input: IssueSetSubscriptionInput!) {\n  updateIssuableSubscription: issueSetSubscription(input: $input) {\n    issue {\n      id\n      subscribed\n    }\n    errors\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function a(e,n){for(var i=0;i<e.definitions.length;i++){var t=e.definitions[i];if(t.name&&t.name.value==n)return t}}i.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,i){if("FragmentSpread"===n.kind)i.add(n.name.value);else if("VariableDefinition"===n.kind){var t=n.type;"NamedType"===t.kind&&i.add(t.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,i)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,i)})),n.definitions&&n.definitions.forEach((function(n){e(n,i)}))}(e,n),t[e.name.value]=n}})),e.exports=i,e.exports.issueSetSubscription=function(e,n){var i={kind:e.kind,definitions:[a(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var r=t[n]||new Set,d=new Set,o=new Set;for(r.forEach((function(e){o.add(e)}));o.size>0;){var s=o;o=new Set,s.forEach((function(e){d.has(e)||(d.add(e),(t[e]||new Set).forEach((function(e){o.add(e)})))}))}return d.forEach((function(n){var t=a(e,n);t&&i.definitions.push(t)})),i}(i,"issueSetSubscription")},"rC+a":function(e,n,i){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"GroupBoard"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"boardId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"BoardID"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"group"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"board"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"boardId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"BoardScopeFragment"},directives:[]}]}}]}}]}}],loc:{start:0,end:236}};t.loc.source={body:'#import "ee_else_ce/boards/graphql/board_scope.fragment.graphql"\n\nquery GroupBoard($fullPath: ID!, $boardId: BoardID!) {\n  workspace: group(fullPath: $fullPath) {\n    id\n    board(id: $boardId) {\n      ...BoardScopeFragment\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};t.definitions=t.definitions.concat(i("ZtTk").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!a[n]&&(a[n]=!0,!0)})));var r={};function d(e,n){for(var i=0;i<e.definitions.length;i++){var t=e.definitions[i];if(t.name&&t.name.value==n)return t}}t.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,i){if("FragmentSpread"===n.kind)i.add(n.name.value);else if("VariableDefinition"===n.kind){var t=n.type;"NamedType"===t.kind&&i.add(t.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,i)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,i)})),n.definitions&&n.definitions.forEach((function(n){e(n,i)}))}(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.GroupBoard=function(e,n){var i={kind:e.kind,definitions:[d(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var t=r[n]||new Set,a=new Set,o=new Set;for(t.forEach((function(e){o.add(e)}));o.size>0;){var s=o;o=new Set,s.forEach((function(e){a.has(e)||(a.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return a.forEach((function(n){var t=d(e,n);t&&i.definitions.push(t)})),i}(t,"GroupBoard")},s9gT:function(e,n,i){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"ProjectBoard"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"boardId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"BoardID"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"board"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"boardId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"BoardScopeFragment"},directives:[]}]}}]}}]}}],loc:{start:0,end:240}};t.loc.source={body:'#import "ee_else_ce/boards/graphql/board_scope.fragment.graphql"\n\nquery ProjectBoard($fullPath: ID!, $boardId: BoardID!) {\n  workspace: project(fullPath: $fullPath) {\n    id\n    board(id: $boardId) {\n      ...BoardScopeFragment\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};t.definitions=t.definitions.concat(i("ZtTk").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!a[n]&&(a[n]=!0,!0)})));var r={};function d(e,n){for(var i=0;i<e.definitions.length;i++){var t=e.definitions[i];if(t.name&&t.name.value==n)return t}}t.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,i){if("FragmentSpread"===n.kind)i.add(n.name.value);else if("VariableDefinition"===n.kind){var t=n.type;"NamedType"===t.kind&&i.add(t.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,i)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,i)})),n.definitions&&n.definitions.forEach((function(n){e(n,i)}))}(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.ProjectBoard=function(e,n){var i={kind:e.kind,definitions:[d(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var t=r[n]||new Set,a=new Set,o=new Set;for(t.forEach((function(e){o.add(e)}));o.size>0;){var s=o;o=new Set,s.forEach((function(e){a.has(e)||(a.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return a.forEach((function(n){var t=d(e,n);t&&i.definitions.push(t)})),i}(t,"ProjectBoard")},tZv5:function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"issueSetTitle"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"UpdateIssueInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"updateIssuableTitle"},name:{kind:"Name",value:"updateIssue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"issue"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"title"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:160}};i.loc.source={body:"mutation issueSetTitle($input: UpdateIssueInput!) {\n  updateIssuableTitle: updateIssue(input: $input) {\n    issue {\n      id\n      title\n    }\n    errors\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function a(e,n){for(var i=0;i<e.definitions.length;i++){var t=e.definitions[i];if(t.name&&t.name.value==n)return t}}i.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,i){if("FragmentSpread"===n.kind)i.add(n.name.value);else if("VariableDefinition"===n.kind){var t=n.type;"NamedType"===t.kind&&i.add(t.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,i)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,i)})),n.definitions&&n.definitions.forEach((function(n){e(n,i)}))}(e,n),t[e.name.value]=n}})),e.exports=i,e.exports.issueSetTitle=function(e,n){var i={kind:e.kind,definitions:[a(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var r=t[n]||new Set,d=new Set,o=new Set;for(r.forEach((function(e){o.add(e)}));o.size>0;){var s=o;o=new Set,s.forEach((function(e){d.has(e)||(d.add(e),(t[e]||new Set).forEach((function(e){o.add(e)})))}))}return d.forEach((function(n){var t=a(e,n);t&&i.definitions.push(t)})),i}(i,"issueSetTitle")},tylY:function(e,n){var i={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"MilestoneFragment"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Milestone"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"expired"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"state"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"title"},arguments:[],directives:[]}]}}],loc:{start:0,end:75}};i.loc.source={body:"fragment MilestoneFragment on Milestone {\n  expired\n  id\n  state\n  title\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function a(e,n){for(var i=0;i<e.definitions.length;i++){var t=e.definitions[i];if(t.name&&t.name.value==n)return t}}i.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,i){if("FragmentSpread"===n.kind)i.add(n.name.value);else if("VariableDefinition"===n.kind){var t=n.type;"NamedType"===t.kind&&i.add(t.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,i)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,i)})),n.definitions&&n.definitions.forEach((function(n){e(n,i)}))}(e,n),t[e.name.value]=n}})),e.exports=i,e.exports.MilestoneFragment=function(e,n){var i={kind:e.kind,definitions:[a(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var r=t[n]||new Set,d=new Set,o=new Set;for(r.forEach((function(e){o.add(e)}));o.size>0;){var s=o;o=new Set,s.forEach((function(e){d.has(e)||(d.add(e),(t[e]||new Set).forEach((function(e){o.add(e)})))}))}return d.forEach((function(n){var t=a(e,n);t&&i.definitions.push(t)})),i}(i,"MilestoneFragment")},u7gu:function(e,n,i){"use strict";i.d(n,"a",(function(){return y})),i.d(n,"b",(function(){return D})),i.d(n,"c",(function(){return I}));var t=i("9k56"),a=i("jIK5"),r=i("CU79"),d=i("oTzT"),o=i("gZSI"),s=i("C+ps"),u=i("i8zK"),l=i("VuSA"),c=i("hII5"),m=i("g+RJ"),f=i("aQY9"),v=i("4Alm"),k=i("i0uk"),p=i("HO44"),b=i("5TS0"),h=i("aBA8");const{mixin:g,props:S,prop:N,event:y}=Object(u.a)("checked",{defaultValue:null}),I=Object(c.c)(Object(l.m)({...b.b,...S,...f.b,...k.b,...p.b,...v.b,ariaLabel:Object(c.b)(a.r),ariaLabelledby:Object(c.b)(a.r),button:Object(c.b)(a.g,!1),buttonVariant:Object(c.b)(a.r),inline:Object(c.b)(a.g,!1),value:Object(c.b)(a.a)}),"formRadioCheckControls"),D=Object(t.c)({mixins:[m.a,b.a,g,h.a,f.a,k.a,p.a,v.a],inheritAttrs:!1,props:I,data(){return{localChecked:this.isGroup?this.bvGroup[N]:this[N],hasFocus:!1}},computed:{computedLocalChecked:{get(){return this.isGroup?this.bvGroup.localChecked:this.localChecked},set(e){this.isGroup?this.bvGroup.localChecked=e:this.localChecked=e}},isChecked(){return Object(s.a)(this.value,this.computedLocalChecked)},isRadio:()=>!0,isGroup(){return!!this.bvGroup},isBtnMode(){return this.isGroup?this.bvGroup.buttons:this.button},isPlain(){return!this.isBtnMode&&(this.isGroup?this.bvGroup.plain:this.plain)},isCustom(){return!this.isBtnMode&&!this.isPlain},isSwitch(){return!(this.isBtnMode||this.isRadio||this.isPlain)&&(this.isGroup?this.bvGroup.switches:this.switch)},isInline(){return this.isGroup?this.bvGroup.inline:this.inline},isDisabled(){return this.isGroup&&this.bvGroup.disabled||this.disabled},isRequired(){return this.computedName&&(this.isGroup?this.bvGroup.required:this.required)},computedName(){return(this.isGroup?this.bvGroup.groupName:this.name)||null},computedForm(){return(this.isGroup?this.bvGroup.form:this.form)||null},computedSize(){return(this.isGroup?this.bvGroup.size:this.size)||""},computedState(){return this.isGroup?this.bvGroup.computedState:Object(o.b)(this.state)?this.state:null},computedButtonVariant(){const{buttonVariant:e}=this;return e||(this.isGroup&&this.bvGroup.buttonVariant?this.bvGroup.buttonVariant:"secondary")},buttonClasses(){const{computedSize:e}=this;return["btn","btn-"+this.computedButtonVariant,{["btn-"+e]:e,disabled:this.isDisabled,active:this.isChecked,focus:this.hasFocus}]},computedAttrs(){const{isDisabled:e,isRequired:n}=this;return{...this.bvAttrs,id:this.safeId(),type:this.isRadio?"radio":"checkbox",name:this.computedName,form:this.computedForm,disabled:e,required:n,"aria-required":n||null,"aria-label":this.ariaLabel||null,"aria-labelledby":this.ariaLabelledby||null}}},watch:{[N](){this[N+"Watcher"](...arguments)},computedLocalChecked(){this.computedLocalCheckedWatcher(...arguments)}},methods:{[N+"Watcher"](e){Object(s.a)(e,this.computedLocalChecked)||(this.computedLocalChecked=e)},computedLocalCheckedWatcher(e,n){Object(s.a)(e,n)||this.$emit(y,e)},handleChange(e){let{target:{checked:n}}=e;const{value:i}=this,t=n?i:null;this.computedLocalChecked=i,this.$nextTick(()=>{this.$emit(r.d,t),this.isGroup&&this.bvGroup.$emit(r.d,t)})},handleFocus(e){e.target&&("focus"===e.type?this.hasFocus=!0:"blur"===e.type&&(this.hasFocus=!1))},focus(){this.isDisabled||Object(d.d)(this.$refs.input)},blur(){this.isDisabled||Object(d.c)(this.$refs.input)}},render(e){const{isRadio:n,isBtnMode:i,isPlain:t,isCustom:a,isInline:r,isSwitch:d,computedSize:o,bvAttrs:s}=this,u=this.normalizeSlot(),l=e("input",{class:[{"form-check-input":t,"custom-control-input":a,"position-static":t&&!u},i?"":this.stateClass],directives:[{name:"model",value:this.computedLocalChecked}],attrs:this.computedAttrs,domProps:{value:this.value,checked:this.isChecked},on:{change:this.handleChange,...i?{focus:this.handleFocus,blur:this.handleFocus}:{}},key:"input",ref:"input"});if(i){let n=e("label",{class:this.buttonClasses},[l,u]);return this.isGroup||(n=e("div",{class:["btn-group-toggle","d-inline-block"]},[n])),n}let c=e();return t&&!u||(c=e("label",{class:{"form-check-label":t,"custom-control-label":a},attrs:{for:this.safeId()}},u)),e("div",{class:[{"form-check":t,"form-check-inline":t&&r,"custom-control":a,"custom-control-inline":a&&r,"custom-checkbox":a&&!n&&!d,"custom-switch":d,"custom-radio":a&&n,["b-custom-control-"+o]:o&&!i},s.class],style:s.style},[l,c])}})},wCwB:function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"updateEpicTitle"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"UpdateEpicInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"updateIssuableTitle"},name:{kind:"Name",value:"updateEpic"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"epic"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"title"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:159}};i.loc.source={body:"mutation updateEpicTitle($input: UpdateEpicInput!) {\n  updateIssuableTitle: updateEpic(input: $input) {\n    epic {\n      id\n      title\n    }\n    errors\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function a(e,n){for(var i=0;i<e.definitions.length;i++){var t=e.definitions[i];if(t.name&&t.name.value==n)return t}}i.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,i){if("FragmentSpread"===n.kind)i.add(n.name.value);else if("VariableDefinition"===n.kind){var t=n.type;"NamedType"===t.kind&&i.add(t.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,i)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,i)})),n.definitions&&n.definitions.forEach((function(n){e(n,i)}))}(e,n),t[e.name.value]=n}})),e.exports=i,e.exports.updateEpicTitle=function(e,n){var i={kind:e.kind,definitions:[a(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var r=t[n]||new Set,d=new Set,o=new Set;for(r.forEach((function(e){o.add(e)}));o.size>0;){var s=o;o=new Set,s.forEach((function(e){d.has(e)||(d.add(e),(t[e]||new Set).forEach((function(e){o.add(e)})))}))}return d.forEach((function(n){var t=a(e,n);t&&i.definitions.push(t)})),i}(i,"updateEpicTitle")}}]);
//# sourceMappingURL=commons-pages.admin.abuse_reports.show-pages.dashboard.issues-pages.groups.boards-pages.groups.issue-8dfa5f96.e0a3e16a.chunk.js.map